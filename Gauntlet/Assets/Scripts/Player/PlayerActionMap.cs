//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/Player/PlayerActionMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActionMap : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActionMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActionMap"",
    ""maps"": [
        {
            ""name"": ""PlayerMovement"",
            ""id"": ""2d1f9f5e-90a2-4be9-b7d0-14365c5c0a5d"",
            ""actions"": [
                {
                    ""name"": ""Player 1 Keyboard"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b5f087ae-ae36-4e35-9372-23db176e8204"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player 2 Keyboard"",
                    ""type"": ""PassThrough"",
                    ""id"": ""73aef529-6c99-4978-8781-ceca6f80fc83"",
                    ""expectedControlType"": """",
                    ""processors"": ""Clamp(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player 3 Keyboard"",
                    ""type"": ""PassThrough"",
                    ""id"": ""44137564-1e7f-40f9-85bf-6a065e76a070"",
                    ""expectedControlType"": """",
                    ""processors"": ""Clamp(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Player 4 Keyboard"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fe3a3f20-2053-4937-856b-07e0bd29a526"",
                    ""expectedControlType"": """",
                    ""processors"": ""Clamp(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllerButtonsShoot"",
                    ""type"": ""Button"",
                    ""id"": ""cd86d078-7ea8-4e02-8904-1aa3ec99a4d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllerButtonsPotion"",
                    ""type"": ""Button"",
                    ""id"": ""85a17828-d879-49ba-a1ee-194e2162b8e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ControllerButtonsKey"",
                    ""type"": ""Button"",
                    ""id"": ""34d8c5a2-8f5a-465a-8240-0e17943f2dde"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""1df169c2-0fe6-4cda-85ac-e0708e9e1e86"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""Clamp(min=-1,max=1)"",
                    ""groups"": """",
                    ""action"": ""Player 1 Keyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""459e3901-1591-45e1-8a26-e08f0636af3f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 1 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""daa9c7f8-5aca-49a1-a22d-e900eba6193f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 1 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f34ec8bb-8917-4d54-9f9a-c4698a9f043b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 1 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cd3076a7-31ea-4d25-8c3a-5300d868d2e3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 1 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""601b7898-3d5c-4005-96f8-64e2a8b5639e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 2 Keyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4c589cbf-1d1c-480a-88dc-f783a69349fd"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 2 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e8c3a0e5-463d-40ec-b9b5-ba1844e1550d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 2 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""285a61d1-418d-4b21-8950-ccdc2a6e0aca"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 2 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3a8dd40b-521b-45e9-9dc5-7db20088264b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 2 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""616adea6-ddeb-41a8-ac4c-cd1eeddcbe7f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 3 Keyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6fb1f578-bf9a-4a37-bd1d-157b5ccb1f02"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 3 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""362980f5-74e8-40ef-abdf-4f1d7ccf8840"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 3 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aa3e8d3a-ff63-4013-ace9-16e43532ff0f"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 3 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3e17d64d-b528-488c-ab1a-9ee6df0a7f72"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 3 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""8e157c2f-0d5f-4d17-8539-b914cba8d4a4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 4 Keyboard"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""12d3be9f-2b4a-4f8e-9729-fb6a0b87c616"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 4 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fe4d3667-8b2d-4de0-9f4a-1fcc553916b8"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 4 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d03365fa-771d-4e0a-9c33-cb930755aec4"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 4 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0b84d478-b2be-4b42-acca-1878c2bd639f"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Player 4 Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cca577e8-998e-490d-a9a9-4a538a51c64d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControllerButtonsShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0967b852-e45e-4de8-acca-0aca0fb24033"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControllerButtonsShoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a6e1681-3328-4f7a-8dc4-8635f81fb7f1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControllerButtonsPotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35649c32-5081-40cf-a76d-e997415c9438"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControllerButtonsPotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee83604f-f5b2-4595-beb6-d39258dac704"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControllerButtonsKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b07c49ae-c2c0-4a98-91b7-f808c59101a1"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControllerButtonsKey"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerMovement
        m_PlayerMovement = asset.FindActionMap("PlayerMovement", throwIfNotFound: true);
        m_PlayerMovement_Player1Keyboard = m_PlayerMovement.FindAction("Player 1 Keyboard", throwIfNotFound: true);
        m_PlayerMovement_Player2Keyboard = m_PlayerMovement.FindAction("Player 2 Keyboard", throwIfNotFound: true);
        m_PlayerMovement_Player3Keyboard = m_PlayerMovement.FindAction("Player 3 Keyboard", throwIfNotFound: true);
        m_PlayerMovement_Player4Keyboard = m_PlayerMovement.FindAction("Player 4 Keyboard", throwIfNotFound: true);
        m_PlayerMovement_ControllerButtonsShoot = m_PlayerMovement.FindAction("ControllerButtonsShoot", throwIfNotFound: true);
        m_PlayerMovement_ControllerButtonsPotion = m_PlayerMovement.FindAction("ControllerButtonsPotion", throwIfNotFound: true);
        m_PlayerMovement_ControllerButtonsKey = m_PlayerMovement.FindAction("ControllerButtonsKey", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMovement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Player1Keyboard;
    private readonly InputAction m_PlayerMovement_Player2Keyboard;
    private readonly InputAction m_PlayerMovement_Player3Keyboard;
    private readonly InputAction m_PlayerMovement_Player4Keyboard;
    private readonly InputAction m_PlayerMovement_ControllerButtonsShoot;
    private readonly InputAction m_PlayerMovement_ControllerButtonsPotion;
    private readonly InputAction m_PlayerMovement_ControllerButtonsKey;
    public struct PlayerMovementActions
    {
        private @PlayerActionMap m_Wrapper;
        public PlayerMovementActions(@PlayerActionMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Player1Keyboard => m_Wrapper.m_PlayerMovement_Player1Keyboard;
        public InputAction @Player2Keyboard => m_Wrapper.m_PlayerMovement_Player2Keyboard;
        public InputAction @Player3Keyboard => m_Wrapper.m_PlayerMovement_Player3Keyboard;
        public InputAction @Player4Keyboard => m_Wrapper.m_PlayerMovement_Player4Keyboard;
        public InputAction @ControllerButtonsShoot => m_Wrapper.m_PlayerMovement_ControllerButtonsShoot;
        public InputAction @ControllerButtonsPotion => m_Wrapper.m_PlayerMovement_ControllerButtonsPotion;
        public InputAction @ControllerButtonsKey => m_Wrapper.m_PlayerMovement_ControllerButtonsKey;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Player1Keyboard.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Keyboard;
                @Player1Keyboard.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Keyboard;
                @Player1Keyboard.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer1Keyboard;
                @Player2Keyboard.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Keyboard;
                @Player2Keyboard.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Keyboard;
                @Player2Keyboard.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer2Keyboard;
                @Player3Keyboard.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer3Keyboard;
                @Player3Keyboard.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer3Keyboard;
                @Player3Keyboard.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer3Keyboard;
                @Player4Keyboard.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer4Keyboard;
                @Player4Keyboard.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer4Keyboard;
                @Player4Keyboard.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnPlayer4Keyboard;
                @ControllerButtonsShoot.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsShoot;
                @ControllerButtonsShoot.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsShoot;
                @ControllerButtonsShoot.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsShoot;
                @ControllerButtonsPotion.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsPotion;
                @ControllerButtonsPotion.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsPotion;
                @ControllerButtonsPotion.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsPotion;
                @ControllerButtonsKey.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsKey;
                @ControllerButtonsKey.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsKey;
                @ControllerButtonsKey.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnControllerButtonsKey;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Player1Keyboard.started += instance.OnPlayer1Keyboard;
                @Player1Keyboard.performed += instance.OnPlayer1Keyboard;
                @Player1Keyboard.canceled += instance.OnPlayer1Keyboard;
                @Player2Keyboard.started += instance.OnPlayer2Keyboard;
                @Player2Keyboard.performed += instance.OnPlayer2Keyboard;
                @Player2Keyboard.canceled += instance.OnPlayer2Keyboard;
                @Player3Keyboard.started += instance.OnPlayer3Keyboard;
                @Player3Keyboard.performed += instance.OnPlayer3Keyboard;
                @Player3Keyboard.canceled += instance.OnPlayer3Keyboard;
                @Player4Keyboard.started += instance.OnPlayer4Keyboard;
                @Player4Keyboard.performed += instance.OnPlayer4Keyboard;
                @Player4Keyboard.canceled += instance.OnPlayer4Keyboard;
                @ControllerButtonsShoot.started += instance.OnControllerButtonsShoot;
                @ControllerButtonsShoot.performed += instance.OnControllerButtonsShoot;
                @ControllerButtonsShoot.canceled += instance.OnControllerButtonsShoot;
                @ControllerButtonsPotion.started += instance.OnControllerButtonsPotion;
                @ControllerButtonsPotion.performed += instance.OnControllerButtonsPotion;
                @ControllerButtonsPotion.canceled += instance.OnControllerButtonsPotion;
                @ControllerButtonsKey.started += instance.OnControllerButtonsKey;
                @ControllerButtonsKey.performed += instance.OnControllerButtonsKey;
                @ControllerButtonsKey.canceled += instance.OnControllerButtonsKey;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);
    public interface IPlayerMovementActions
    {
        void OnPlayer1Keyboard(InputAction.CallbackContext context);
        void OnPlayer2Keyboard(InputAction.CallbackContext context);
        void OnPlayer3Keyboard(InputAction.CallbackContext context);
        void OnPlayer4Keyboard(InputAction.CallbackContext context);
        void OnControllerButtonsShoot(InputAction.CallbackContext context);
        void OnControllerButtonsPotion(InputAction.CallbackContext context);
        void OnControllerButtonsKey(InputAction.CallbackContext context);
    }
}
